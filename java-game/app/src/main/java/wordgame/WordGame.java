/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package wordgame;

import java.util.ArrayList;
import java.util.Random;

public class WordGame {
  public final Integer ATTEMPTS = 3;
  private ArrayList<Player> players = new ArrayList<Player>();
  private Player currentPlayer;
  private Player winner;
  private WordChooser chooser;

  public void startGame() {
    Random random = new Random();
    Integer randomIndex = random.nextInt(getNumberOfPlayers());
    currentPlayer = players.get(randomIndex);
  }

  public void reset() {
    currentPlayer = null;
    winner = null;
    players.clear();
  }

  public void addPlayer(String name) {
    chooser = new WordChooser();
    Player player = new Player(ATTEMPTS, chooser.getRandomWordFromDictionary());
    player.setName(name);
    players.add(player);
  }

  public Player getNextPlayer() {
    Integer index = (currentPlayer.getPlayerNumber()) % getNumberOfPlayers();
    currentPlayer = players.get(index);
    return currentPlayer;
  }

  public Boolean finished() {
    Integer playersOutOfTheGame = 0;
    for (Player player : players) {
      if (player.isWinner()) {
        winner = player;
        return true;
      }
      if (player.getAttemptsRemaining() == 0) {
        playersOutOfTheGame++;
      }
    }
    if (playersOutOfTheGame == getNumberOfPlayers() - 1) {
      for (Player player : players) {
        if (player.getAttemptsRemaining() > 0) {
          winner = player;
          return true;
        }
      }
    }
    return false;
  }

  public Integer getCurrentPlayerIndex() {
    return currentPlayer.getPlayerNumber();
  }

  // GETTERS
  public Player getWinner() {
    return winner;
  }

  public Player getCurrentPlayer() {
    return currentPlayer;
  }

  public ArrayList<Player> getPlayers() {
    return players;
  }

  public Integer getNumberOfPlayers() {
    return players.size();
  }

  public static void main(String[] args) {
    UserInterface ui = new UserInterface();
    WordGame game = new WordGame();
    Player currentPlayer;

    ui.showWelcomeMessage();

    ui.registerPlayers(game);

    game.startGame();

    ui.printDivider();

    while (!game.finished()) {
      currentPlayer = game.getNextPlayer();
      ui.promptPlayer(currentPlayer);
      ui.renderWord(currentPlayer);
      ui.showUserGuesses(currentPlayer);
      ui.getUserGuess(currentPlayer);
      ui.showAttemptsRemaining(currentPlayer);
      ui.printDivider();
    }

    ui.showWinner(game.getWinner());
  }
}
